/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/* END temporary RGB support section */

/ {
    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <60>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <30>;
    };
};

/ {
    macros {
        // System and Power

        tm: tm {
            label = "TASK_MANAGER";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT &kp RCTRL &kp K_SCROLL_DOWN &kp RCTRL &kp K_SCROLL_UP>;
        };

        cad: cad {
            label = "CTRL_ALT_DEL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp DEL>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp DEL>;
        };

        slp: slp {
            label = "SLEEP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp S>;
        };

        rst: rst {
            label = "RESTART";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp R>;
        };

        off: off {
            label = "SHUTDOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp U &kp U>;
        };

        // Microphones

        teams_mute: teams_mute {
            label = "TEAMS_MUTE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_tap>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 100>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        // Browser Controls

        tab_right: tab_right {
            label = "TAB_RIGHT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        tab_left: tab_left {
            label = "TAB_LEFT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        close_tab: close_tab {
            label = "CLOSE_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        //Unicode Special Characters
        //Need regkey HKEY_CURRENT_USER\Control Panel\Input Method, REG_SZ EnableHexNumpad = 1
        //Symbols       

        smfada_a: smfada_a {
            label = "SMALL_FADA_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_a: lfada_a {
            label = "LARGE_FADA_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_a: smumlaut_a {
            label = "SMALL_UMLAUT_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_a: lumlaut_a {
            label = "LARGE_UMLAUT_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        smlat_ae: smlat_ae {
            label = "SMALL_LATIN_AE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        lglat_ae: lglat_ae {
            label = "LARGE_LATIN_AE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_e: smfada_e {
            label = "SMALL_FADA_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_e: lfada_e {
            label = "LARGE_FADA_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_i: smfada_i {
            label = "SMALL_FADA_I";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp E &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_i: lfada_i {
            label = "LARGE_FADA_I";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp C &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_o: smfada_o {
            label = "SMALL_FADA_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_o: lfada_o {
            label = "LARGE_FADA_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_o: smumlaut_o {
            label = "SMALL_UMLAUT_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_o: lumlaut_o {
            label = "LARGE_UMLAUT_O";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        smfada_u: smfada_u {
            label = "SMALL_FADA_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        lfada_u: lfada_u {
            label = "LARGE_FADA_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        smumlaut_u: smumlaut_u {
            label = "SMALL_UMLAUT_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        lumlaut_u: lumlaut_u {
            label = "LARGE_UMLAUT_U";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        smtil_n: smtil_n {
            label = "SMALL_TILDE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp F &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        ltil_n: ltil_n {
            label = "LARGE_TILDE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        essette_s: essette_s {
            label = "ESSETTE_S";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp D &kp F>,
                <&macro_release>,
                <&kp LALT>;
        };

        euro: euro {
            label = "EURO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N0 &kp A &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        us_cent: us_cent {
            label = "US_CENT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        uk_pnd: uk_pnd {
            label = "UK_POUND";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        degree: degree {
            label = "DEGREE_SIGN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        inv_exc: inv_exc {
            label = "INVERTED_EXCLAMATION_MARK";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        inv_ques: inv_ques {
            label = "INVERTED_QUESTION_MARK";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp F>,
                <&macro_release>,
                <&kp LALT>;
        };

        plus_min: plus_min {
            label = "PLUS_MINUS_SIGN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        //IPA

        schwa: schwa {
            label = "SCHWA";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        //Diacritical Characters

        smogo_a: smogo_a {
            label = "SMALL_OGONEK_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        logo_a: logo_a {
            label = "LARGE_OGONEK_A";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        smogo_e: smogo_e {
            label = "SMALL_OGONEK_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        logo_e: logo_e {
            label = "LARGE_OGONEK_E";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N1 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_c: smacute_c {
            label = "SMALL_ACUTE_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_c: lacute_c {
            label = "LARGE_ACUTE_C";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N0 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        smdark_l: smdark_l {
            label = "SMALL_DARK_L";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        ldark_l: ldark_l {
            label = "LARGE_DARK_L";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_n: smacute_n {
            label = "SMALL_ACUTE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_n: lacute_n {
            label = "LARGE_ACUTE_N";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_s: smacute_s {
            label = "SMALL_ACUTE_S";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_s: lacute_s {
            label = "LARGE_ACUTE_S";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        smacute_z: smacute_z {
            label = "SMALL_ACUTE_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp A>,
                <&macro_release>,
                <&kp LALT>;
        };

        lacute_z: lacute_z {
            label = "LARGE_ACUTE_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        smdot_z: smdot_z {
            label = "SMALL_DOT_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        ldot_z: ldot_z {
            label = "LARGE_DOT_Z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        // Fractions

        one_half: one_half {
            label = "ONE_HALF";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_third: one_third {
            label = "ONE_THIRD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_fourth: one_fourth {
            label = "ONE_FOURTH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        one_eighth: one_eighth {
            label = "ONE_EIGHTH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        two_thirds: two_thirds {
            label = "TWO_THIRDS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        three_fourths: three_fourths {
            label = "THREE_FOURTHS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp E>,
                <&macro_release>,
                <&kp LALT>;
        };

        three_eighths: three_eighths {
            label = "THREE_EIGHTHS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp C>,
                <&macro_release>,
                <&kp LALT>;
        };

        five_eighths: five_eighths {
            label = "FIVE_EIGHTHS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp D>,
                <&macro_release>,
                <&kp LALT>;
        };

        seven_eighths: seven_eighths {
            label = "SEVEN_EIGHTHS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N1 &kp KP_N5 &kp E>,
                <&macro_release>,
                <&kp LALT>;
        };

        // Operators

        less_equ: less_equ {
            label = "LESS_THEN_OR_EQUAL_TO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        gtr_equ: gtr_equ {
            label = "GREATER_THEN_OR_EQUAL_TO";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        not_equ: not_equ {
            label = "DOES_NOT_EQUAL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N6 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;
        };

        alm_equ: alm_equ {
            label = "ALMOST_EQUAL";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N2 &kp KP_N2 &kp KP_N4 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        dbl_left: dbl_left {
            label = "DOUBLE_LEFT_MARKS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp A &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        dbl_right: dbl_right {
            label = "DOUBLE_RIGHT_MARKS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <0>;
            wait-ms = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_PLUS &kp KP_N0 &kp KP_N0 &kp B &kp B>,
                <&macro_release>,
                <&kp LALT>;
        };

        zoomin: zoomin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp K_SCROLL_UP>,
                <&macro_release>,
                <&kp RCTRL>;

            label = "ZOOMIN";
        };

        zoomout: zoomout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp K_SCROLL_DOWN>,
                <&macro_release>,
                <&kp RCTRL>;

            label = "ZOOMOUT";
        };
    };
};

//Combos, note that key listing is zero indexed
//lshift: 36
//rshift: 49

/ {
    combos {
        compatible = "zmk,combos";

        // Characters

        combo_sm_lat_ae {
            timeout-ms = <200>;
            layers = <3>;
            key-positions = <15 25>;
            bindings = <&smlat_ae>;
        };

        combo_lg_lat_ae {
            timeout-ms = <200>;
            layers = <3>;
            key-positions = <15 25 49>;
            bindings = <&lglat_ae>;
        };

        // Fractions

        combo_one_half {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <1 2>;
            bindings = <&one_half>;
        };

        combo_one_third {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <1 3>;
            bindings = <&one_third>;
        };

        combo_one_fourth {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <1 4>;
            bindings = <&one_fourth>;
        };

        combo_one_eighth {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <1 8>;
            bindings = <&one_eighth>;
        };

        combo_two_thirds {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <2 3>;
            bindings = <&two_thirds>;
        };

        combo_three_fourths {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <3 4>;
            bindings = <&three_fourths>;
        };

        combo_three_eighths {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <3 8>;
            bindings = <&three_eighths>;
        };

        combo_five_eighths {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <5 8>;
            bindings = <&five_eighths>;
        };

        combo_seven_eighths {
            timeout-ms = <20>;
            layers = <0>;
            key-positions = <7 8>;
            bindings = <&seven_eighths>;
        };

        // Operators

        combo_less_equal {
            timeout-ms = <200>;
            layers = <2>;
            key-positions = <15 37>;
            bindings = <&less_equ>;
        };

        combo_gtr_equal {
            timeout-ms = <200>;
            layers = <2>;
            key-positions = <16 37>;
            bindings = <&gtr_equ>;
        };

        combo_not_equal {
            timeout-ms = <200>;
            layers = <2>;
            key-positions = <25 37>;
            bindings = <&not_equ>;
        };

        combo_almost_equal {
            timeout-ms = <200>;
            layers = <2>;
            key-positions = <14 37>;
            bindings = <&alm_equ>;
        };
    };
};




/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                              &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                               &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                               &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &ext_power EP_TOG &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp RET    &kp SPACE         &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                 |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                 | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                 | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |   | RGB  |      |      |       |      |       |       |
//              |      |       |       |      |      |   |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                      &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                            &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                          &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &rgb_ug RGB_TOG  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans           &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
